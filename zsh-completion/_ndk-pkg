#compdef ndk-pkg

_commands=(
    '-h:print the help infomation of ndk-pkg command.'
    '--help:print the help infomation of ndk-pkg command.'
    'help:print the help infomation of ndk-pkg command.'
    '-V:print the version of ndk-pkg and NDK.'
    '--version:print the version of ndk-pkg and NDK.'
    'version:print the version of ndk-pkg and NDK.'
    'search:search packages can be installed.'
    'list:list the supported abis, the supported sdk-api-levels, available, installed and outdated packages.'
    'tree:list contents of a installed package directory in a tree-like format.'
    'info:print the basic infomation of packages.'
    'formula:view,edit the formula of a package.'
    'install:install packages.'
    'reinstall:reinstall packages.'
    'uninstall:uninstall packages.'
    'cleanup:cleanup the unused cache.'
    'update:update the formula repository.'
    'upgrade:upgrade the outdated packages.'
    'fetch:download formula resources of a package to the cache.'
    'homepage:visit the homepage of a formula or the ndk-pkg project.'
    'depends:show the depends of a package.'
    'prefix:show the installation direcotory of a formula or the ndk-pkg home.'
    'pack:pack a installed package.'
    'logs:print the logs of a installed package.'
    'is:check something. easy to write script.'
)

_list=(
    'abis:list the supported abis.'
    'archs:list the supported archs.'
    'sdk-api-levels:list the supported android-sdk api-levels.'
    'available:list the available packages.'
    'installed:list the installed packages.'
    'outdated:list the installed packages which can be upgraded.'
)

function _ndk_pkg_list() {
    _describe 'list' _list
}

function _ndk_pkg_commands() {
    _describe 'command' _commands
}

function _ndk_pkg_available_packages() {
    local -a _available_packages
    _available_packages=($(ndk-pkg list available -q))
    _describe 'available-packages' _available_packages
}

function _ndk_pkg_installed_packages() {
    local -a _installed_packages
    _installed_packages=($(ndk-pkg list installed))
    _describe 'installed-packages' _installed_packages
}

function _ndk_pkg_outdated_packages() {
    local -a _outdated_packages
    _outdated_packages=($(ndk-pkg list outdated))
    _describe 'outdated-packages' _outdated_packages
}

function _ndk_pkg() {
    local context state state_descr line
    typeset -A opt_args

    _arguments \
        '1: :_ndk_pkg_commands' \
        '*:: :->option'

    case $state in
        option)
            case $words[1] in
                list)
                    _arguments \
                        ':list:_ndk_pkg_list' \
                        '-q[quiet mode. do not report error log]'
                    ;;
                formula)
                    _arguments \
                        ':action:(create delete rename view edit list)' \
                        '*:: :->action'
                    case $state in
                        action)
                            case $words[1] in
                                delete|rename|view|edit)
                                    _arguments ':package-name:_ndk_pkg_available_packages'
                            esac
                    esac
                    ;;
                info)
                    _arguments '*:package-name:_ndk_pkg_available_packages' ;;
                fetch|homepage|depends)
                    _arguments ':package-name:_ndk_pkg_available_packages' ;;
                prefix|pack|tree)
                    _arguments ':package-name:_ndk_pkg_installed_packages' ;;
                logs)
                    _arguments \
                        '1:package-name:_ndk_pkg_installed_packages' \
                        '2:abi:($(ndk-pkg list abis))'
                    ;;
                install)
                    _arguments \
                        ':package-name:_ndk_pkg_available_packages' \
                        '--min-sdk-api-level=-[set the min android-sdk api-level]:min-sdk-api-level:($(ndk-pkg list sdk-api-levels))' \
                        '--dry-run[dry-run]' \
                        '--keep-working-dir[do not delete working-dir even if installed success]' \
                        '(--verbose -v)'{--verbose,-v}'[verbose output log]' \
                        '(--xtrace -x)'{--xtrace,-x}'[trace execution of commands]'
                    ;;
                reinstall)
                    _arguments \
                        ':package-name:_ndk_pkg_installed_packages' \
                        '--min-sdk-api-level=-[set the min android-sdk api-level]:min-sdk-api-level:($(ndk-pkg list sdk-api-levels))' \
                        '(--verbose -v)'{--verbose,-v}'[verbose output log]' \
                        '(--xtrace -x)'{--xtrace,-x}'[trace execution of commands]'
                    ;;
                upgrade)
                    _arguments \
                        ':package-name:_ndk_pkg_outdated_packages' \
                        '--min-sdk-api-level=-[set the min android-sdk api-level]:min-sdk-api-level:($(ndk-pkg list sdk-api-levels))' \
                        '(--verbose -v)'{--verbose,-v}'[verbose output log]' \
                        '(--xtrace -x)'{--xtrace,-x}'[trace execution of commands]'
                    ;;
                uninstall)
                    _arguments '*:package-name:_ndk_pkg_installed_packages' ;;
                is)
                    _arguments \
                        '1: :(available installed outdated)' \
                        '2:package-name:_ndk_pkg_available_packages'
                    ;;
                *);;
            esac
            ;;
        *);;
    esac
}

_ndk_pkg "$@"
